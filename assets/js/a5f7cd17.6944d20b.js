"use strict";(self.webpackChunkfellowship=self.webpackChunkfellowship||[]).push([[676],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3322:function(e,t,n){n.d(t,{Z:function(){return r}});var a=n(7294);function r(e){var t=e.src;return a.createElement("div",{style:{width:"560px",maxWidth:"100%"}},a.createElement("iframe",{width:"100%",height:"315",src:t,title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"true"}))}},843:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=n(3322),i=["components"],s={sidebar_position:6,sidebar_label:"Unit 6: JavaScript"},c="Unit 6: Scripting with JavaScript",u={unversionedId:"unit6",id:"unit6",title:"Unit 6: Scripting with JavaScript",description:"Welcome to Unit 6",source:"@site/docs/unit6.mdx",sourceDirName:".",slug:"/unit6",permalink:"/course/unit6",editUrl:"https://github.com/icssc/fellowship/tree/main/docs/unit6.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,sidebar_label:"Unit 6: JavaScript"},sidebar:"tutorialSidebar",previous:{title:"Unit 5: Personal Branding",permalink:"/course/unit5"},next:{title:"Unit 7: React",permalink:"/course/unit7"}},p={},d=[{value:"Welcome to Unit 6",id:"welcome-to-unit-6",level:2},{value:"Unit 6 Lecture Video",id:"unit-6-lecture-video",level:2},{value:"JavaScript",id:"javascript",level:2},{value:"Printing",id:"printing",level:3},{value:"Variables",id:"variables",level:3},{value:"Strings",id:"strings",level:3},{value:"Arrays",id:"arrays",level:3},{value:"Sorting",id:"sorting",level:4},{value:"Advanced Array Functions",id:"advanced-array-functions",level:4},{value:"Map",id:"map",level:4},{value:"Filter",id:"filter",level:4},{value:"Reduce",id:"reduce",level:4},{value:"Conditionals",id:"conditionals",level:3},{value:"If Statements",id:"if-statements",level:4},{value:"Ternary Operator",id:"ternary-operator",level:4},{value:"Switch Statements",id:"switch-statements",level:4},{value:"Loops",id:"loops",level:3},{value:"Objects",id:"objects",level:3},{value:"Functions",id:"functions",level:3},{value:"Arrow Functions",id:"arrow-functions",level:4},{value:"Callback Functions",id:"callback-functions",level:4},{value:"Anonymous Functions",id:"anonymous-functions",level:4},{value:"Documentation",id:"documentation",level:3},{value:"Setting up JavaScript and Node.js",id:"setting-up-javascript-and-nodejs",level:2},{value:"Node.js",id:"nodejs",level:3},{value:"Running JavaScript",id:"running-javascript",level:3},{value:"Assignment",id:"assignment",level:2},{value:"Submission",id:"submission",level:3},{value:"External Resources",id:"external-resources",level:2}],m={toc:d};function h(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"unit-6-scripting-with-javascript"},"Unit 6: Scripting with JavaScript"),(0,o.kt)("h2",{id:"welcome-to-unit-6"},"Welcome to Unit 6"),(0,o.kt)("p",null,"JavaScript is the world's most popular programming language, also considered the programming language of the web.\nMany web developers use JavaScript to create websites and add behavior to them."),(0,o.kt)("h2",{id:"unit-6-lecture-video"},"Unit 6 Lecture Video"),(0,o.kt)(l.Z,{src:"https://www.youtube.com/embed/Y1sL0tizxDU",mdxType:"Video"}),(0,o.kt)(l.Z,{src:"https://www.youtube.com/embed/DHjqpvDnNGE",mdxType:"Video"}),(0,o.kt)("h2",{id:"javascript"},"JavaScript"),(0,o.kt)("p",null,"JavaScript is a high-level language and is very similar to many languages you might have used before (Python, Java).\nHere's a quick overview of the basics."),(0,o.kt)("h3",{id:"printing"},"Printing"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'console.log("Hello, World!"); \n// In Web Development, this will actually show up in the developer console. \n// Open the console in Chrome with Cmd+Alt+J (mac) or Ctrl+Shift+J (windows)\n')),(0,o.kt)("h3",{id:"variables"},"Variables"),(0,o.kt)("p",null,"Variables are dynamically-typed, meaning, they don't have a type (like in Python).\nUndefined variables have the value ",(0,o.kt)("inlineCode",{parentName:"p"},"undefined"),".\nWe use the keywords ",(0,o.kt)("inlineCode",{parentName:"p"},"var"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"let")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"const")," to define variables."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Keyword"),(0,o.kt)("th",{parentName:"tr",align:null},"Behavior"),(0,o.kt)("th",{parentName:"tr",align:null},"When to Use"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"var"),(0,o.kt)("td",{parentName:"tr",align:null},"Defines a variable limited in scope to the function."),(0,o.kt)("td",{parentName:"tr",align:null},"Don't use var. To learn more, read ",(0,o.kt)("a",{parentName:"td",href:"https://medium.com/@codingsam/awesome-javascript-no-more-var-working-title-999428999994"},'"Why don\'t we use var anymore?"'),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"let"),(0,o.kt)("td",{parentName:"tr",align:null},"Defines a variable limited in scope to the block."),(0,o.kt)("td",{parentName:"tr",align:null},"Use when you need to change the value of the variable later on.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"const"),(0,o.kt)("td",{parentName:"tr",align:null},"Defines a variable limited in scope to the block, but its value is constant."),(0,o.kt)("td",{parentName:"tr",align:null},"You should always use const unless you need to change the value of the variable later on.")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"let x = 'hello';\nx = 1234;           // the `x` variable can be changed.\nconst pi = 3.14;    // the `pi` variable cannot be changed.\n")),(0,o.kt)("h3",{id:"strings"},"Strings"),(0,o.kt)("p",null,"Strings are a collection of characters.\nThey can be enclosed in either single quotes ",(0,o.kt)("inlineCode",{parentName:"p"},"' '")," or double quotes ",(0,o.kt)("inlineCode",{parentName:"p"},'" "'),"."),(0,o.kt)("p",null,"There are a lot of powerful ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt"},"built-in string functions")," for you to use.\nHere are a few popular examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const clubName = 'icssc';\nconsole.log(className);                 // icssc\nconsole.log(className.length);          // 5\nconsole.log(className.toUpperCase());   // ICSSC\nconsole.log(className.indexOf('ss'));   // 2\nconsole.log(className.includes('cs'));  // true\nconsole.log(className.startsWith('i')); // true\nconsole.log(className.endsWith('sc'));  // true\n")),(0,o.kt)("p",null,"You can also perform string interpolation using backticks ",(0,o.kt)("inlineCode",{parentName:"p"},"` `"),'.\nString interpolation is when you inject an expression into a string.\nIn JavaScript, this is called "template literals".\nYou can put any expression into the string using a dollar sign and curly brace: ',(0,o.kt)("inlineCode",{parentName:"p"},"${expression}"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'let likes = 5;\nconsole.log(\'This post has \' + likes + \' likes\');   // "This post has 5 likes"\nconsole.log(`This post has ${likes} likes`);        // "This post has 5 likes" <- same but cleaner\n\n// You can also compute expressions inside the string\nconsole.log(`I wish I had ${likes * 10} likes!`)    // "I wish I had 50 likes!"\n')),(0,o.kt)("h3",{id:"arrays"},"Arrays"),(0,o.kt)("p",null,"Arrays are almost exactly the same as they are in Python."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const array = ['a', 'b', 'c', 1, 2, 3];\n\nconsole.log(array[2]);      // \"c\"\nconsole.log(array.length);  // \"6\"\narray.push('4');            // add item to end of the array \nconsole.log(array);         // \"['a', 'b', 'c', 1, 2, 3, '4']\"\n\n\nconst str = array.join('-'); // Combine elements into a string\nconsole.log(str);            // \"a-b-c-1-2-3-4\"\n\n// get index of an element (first occurrence)\nconsole.log(array.indexOf('x')); // 3\n\narray.reverse();    // Reverse the array\nconsole.log(array); // \"['4', 3, 2, 1, 'c', 'b', 'a']\"\n")),(0,o.kt)("h4",{id:"sorting"},"Sorting"),(0,o.kt)("p",null,"Arrays can be sorted with the ",(0,o.kt)("inlineCode",{parentName:"p"},".sort()")," function.\nBy default, ",(0,o.kt)("inlineCode",{parentName:"p"},".sort()")," will alphabetize the array."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const numbers = [2, 3, 4, 1];\nnumbers.sort(); // [1, 2, 3, 4]\n")),(0,o.kt)("p",null,"However we can customize our sort by providing a ",(0,o.kt)("inlineCode",{parentName:"p"},"compareFunction"),".\nThis function takes 2 elements and returns a value that determines how to order the elements.  "),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"compareFunction(a, b) return value"),(0,o.kt)("th",{parentName:"tr",align:null},"sort order"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"> 0"),(0,o.kt)("td",{parentName:"tr",align:null},"sort b before a")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"< 0"),(0,o.kt)("td",{parentName:"tr",align:null},"sort a before b")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"=== 0"),(0,o.kt)("td",{parentName:"tr",align:null},"keep original order of a and b")))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\ud83d\udca1 The use of ",(0,o.kt)("inlineCode",{parentName:"p"},"===")," is intentional here! Check out this ",(0,o.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/359494/which-equals-operator-vs-should-be-used-in-javascript-comparisons"},"Stack Overflow thread")," for an in depth dive on ",(0,o.kt)("inlineCode",{parentName:"p"},"==")," vs ",(0,o.kt)("inlineCode",{parentName:"p"},"===")," in JavaScript.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// Sort the list of words ignoring uppercase\nconst words = [\"Water\", \"fire\", \"Ice\", \"ice cream\"];\nwords.sort((a, b) => {\n    // .localeCompare helps us compare two strings\n    return a.toLowerCase().localeCompare(b.toLowerCase());  \n}); // ['fire', 'Ice', 'ice cream', 'Water']\n\n// This is also helpful for sorting objects\nconst players1 = [{ name: \"Chase\", points: 2 }, { name: \"Raman\", points: 3 }]\nplayers1.sort((a, b) => {\n    return b.points - a.points;\n}); // [{ name: 'Raman', points: 3 }, { name: 'Chase', points: 2 }]\n")),(0,o.kt)("h4",{id:"advanced-array-functions"},"Advanced Array Functions"),(0,o.kt)("p",null,"JavaScript arrays also have methods that help us create and modify arrays: ",(0,o.kt)("inlineCode",{parentName:"p"},".map"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".filter"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},".reduce"),".\nYou will use these functions a lot, so ",(0,o.kt)("strong",{parentName:"p"},"it's important to understand what each does"),"."),(0,o.kt)("h4",{id:"map"},"Map"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"map()")," function creates a new array from an existing one.\nEach element in the array is passed through a function, which returns a value to be added to the new array."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const numbers = [1, 2, 3, 4];\nconst doubled = numbers.map(function(item) {\n    return item * 2;\n});\nconsole.log(doubled); // [2, 4, 6, 8]\n")),(0,o.kt)("h4",{id:"filter"},"Filter"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"filter()")," function applies a conditional to each element in the array.\nIf the conditional is true, the element is included in the output array."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const numbers = [1, 2, 3, 4];\nconst evens = numbers.filter(function(item) {\n    return item % 2 === 0;\n});\nconsole.log(evens); // [2, 4]\n")),(0,o.kt)("h4",{id:"reduce"},"Reduce"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"reduce()")," function reduces the values of an array to just one value.\nIt does so by accumulating a value as it iterates through the array.\nThe function takes two parameters: ",(0,o.kt)("inlineCode",{parentName:"p"},"reduce(callbackFn, initialValue)"),".  "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"initialValue")," is the intial value of your accumulator."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"callbackFn")," is your 'reducer' function.\nThis function takes two parameters, the accumulator and an item.\nFor each item in the array, the ",(0,o.kt)("inlineCode",{parentName:"li"},"callBackFn")," is called on the item and returns the updated accumulator.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const numbers = [1, 2, 3, 4];\n\n// Callback Function parameters\n//  result  - the accumulator, which is the returned value of the previous iteration.\n//  item    - the current item in the array.\n\n// Note: the intial value of the accumulator is set to 0.\nconst sum = numbers.reduce(function (result, item) { return result + item; }, 0);\nconsole.log(sum); // 10\n")),(0,o.kt)("h3",{id:"conditionals"},"Conditionals"),(0,o.kt)("h4",{id:"if-statements"},"If Statements"),(0,o.kt)("p",null,"For if statements, JavaScript uses parentheses ",(0,o.kt)("inlineCode",{parentName:"p"},"()")," to denote the conditions and curly brackets ",(0,o.kt)("inlineCode",{parentName:"p"},"{}")," to denote code blocks."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"if (i > 5) {\n    console.log('i is bigger than 5');\n} else if (i >= 3) {\n    console.log('i is between 3 and 5');\n} else {\n    console.log('i is less than 3');\n}\n")),(0,o.kt)("h4",{id:"ternary-operator"},"Ternary Operator"),(0,o.kt)("p",null,"A ternary operator can be used to replace (and simply) an if..else statement in certain situations.\nTernary operators are extremely common in React."),(0,o.kt)("p",null,"This is the format of the ternary operator: ",(0,o.kt)("inlineCode",{parentName:"p"},"condition ? trueValue : falseValue"),".",(0,o.kt)("br",{parentName:"p"}),"\n","If the condition is true, the ",(0,o.kt)("inlineCode",{parentName:"p"},"trueValue")," will be returned.\nIf it is false, the ",(0,o.kt)("inlineCode",{parentName:"p"},"falseValue")," will be returned."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'// Consider the following if statement\nlet price;\nif (isMember) {\n    price = "$2.00";\n} else {\n    price = "$10.00";\n}\n\n// This can be drastically condensed with a ternary operator\nprice = isMember ? \'$2.00\' : \'$10.00\';\n\n// We can also use ternary operators with return statements\nfunction evenOrOdd(number) {\n    return number % 2 == 0 ? "Even" : "Odd";\n}\n')),(0,o.kt)("h4",{id:"switch-statements"},"Switch Statements"),(0,o.kt)("p",null,"Switch statements can helpful for simple branching decisions.\nGiven a value, it will execute the code under the equivalent case.\nTrying to write this as a series of if-else statements would get large."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"switch (name) {\n    case 'Aaron':\n        console.log('PeterPortal Tech Lead');\n        break;\n    case 'Alexander':\n        console.log('Zotistics Tech Lead');\n        break;\n    case 'Chase':\n    case 'Raman':\n        // We can fall-through if two values should be the same\n        // Here, 'Chase' and 'Raman' should print the same thing\n        console.log('Projects Co-Chair');\n        break;\n    default:\n        console.log(\"That name isn't in Projects Committee\");\n        break;\n}\n")),(0,o.kt)("h3",{id:"loops"},"Loops"),(0,o.kt)("p",null,"JavaScript uses curly brackets ",(0,o.kt)("inlineCode",{parentName:"p"},"{}")," to denote code blocks loops. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'for (let x = 0; x < 5; x++) {\n    console.log(x);\n}\nwhile (true) {\n    console.log("repeat");\n}\n')),(0,o.kt)("p",null,"We can also use for-each loops in javascript, but only for arrays.\nThis is similar to the map, filter and reduce function mentioned in the previous section.\nThis uses a callback function, more on this ",(0,o.kt)("a",{parentName:"p",href:"#callback-functions"},"later"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const array = ["one", "two", "three"]\narray.forEach(function (item, index) { // notice how a function is passed into forEach function call.\n  console.log(item, index);\n});\n')),(0,o.kt)("p",null,"In fact, JavaScript also has something cool called a for-of loop.\nThis lets us loop through iterables like strings and arrays."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const str = "fellowship"\nfor (const element of str) {\n  console.log(element);\n}\n')),(0,o.kt)("h3",{id:"objects"},"Objects"),(0,o.kt)("p",null,"Similar to Python Dictionaries, these are an unordered set of key-value pairs.\nUnlike python, you don't need quotes around the keys. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const ages = {alice:40, bob:35, charles:13}\nconst things = {num:12, dog:'woof', list:[1,2,3]}\n\n// both of these work!\nconsole.log(ages[\"alice\"]); // 40\nconsole.log(ages.bob); // 35\n")),(0,o.kt)("h3",{id:"functions"},"Functions"),(0,o.kt)("p",null,"Define the ",(0,o.kt)("inlineCode",{parentName:"p"},"sayHello")," function that takes in two parameters, ",(0,o.kt)("inlineCode",{parentName:"p"},"firstName"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"lastName"),".",(0,o.kt)("br",{parentName:"p"}),"\n","In JavaScript, parameters are optional. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'function sayHello(firstName, lastName) {\n    return "Hello, " + firstName + " " + lastName;\n}\n\nconsole.log(sayHello("Raman", "Gupta")); // Hello, Raman Gupta\nconsole.log(sayHello()); // Hello, undefined undefined\n')),(0,o.kt)("h4",{id:"arrow-functions"},"Arrow Functions"),(0,o.kt)("p",null,"Arrow functions are a newer feature of JavaScript, and let us write functions with much shorter syntax. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const otherSayHello = (firstName, lastName) => {\n    return "Hello, " + firstName + " " + lastName;\n};\n')),(0,o.kt)("p",null,"In an arrow function, the arguments are defined in the parenthesis (in this case ",(0,o.kt)("inlineCode",{parentName:"p"},"firstName")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"lastName"),") and the function body is defined in the curly brackets after the arrow, hence the name."),(0,o.kt)("p",null,"Arrow functions return a value by default, so if it only requires one statement to write the function, we can cut it even shorter by removing the brackets and the ",(0,o.kt)("inlineCode",{parentName:"p"},"return")," keyword. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const otherSayHello = (firstName, lastName) => "Hello, " + firstName + " " + lastName;\n')),(0,o.kt)("h4",{id:"callback-functions"},"Callback Functions"),(0,o.kt)("p",null,"Functions are objects, and can be passed as arguments to other function calls. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"//Iterate through an array\nlet array = ['a','b','c'];\nlet printItem = function(item) {\n console.log(item);\n}\narray.forEach(printItem);\n")),(0,o.kt)("h4",{id:"anonymous-functions"},"Anonymous Functions"),(0,o.kt)("p",null,"We can use anonymous functions to reduce how much code we write even more.\nThis way we don't have to give each function a name."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"array.forEach(function(item) {\n console.log(item);\n});\n")),(0,o.kt)("h3",{id:"documentation"},"Documentation"),(0,o.kt)("p",null,"If JavaScript is new to you, or you are curious, it might be helpful to check out the official documentation.\nIt has tutorials, examples, and a reference to JavaScript syntax/features.\nThere's so much more that we haven't covered on how JavaScript works. "),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript"},"JavaScript Documentation")),(0,o.kt)("h2",{id:"setting-up-javascript-and-nodejs"},"Setting up JavaScript and Node.js"),(0,o.kt)("p",null,"We will be using ",(0,o.kt)("inlineCode",{parentName:"p"},"nvm")," to install Node.\nNvm makes it easier to jump between versions of node, which you will need for some projects. "),(0,o.kt)("h3",{id:"nodejs"},"Node.js"),(0,o.kt)("p",null,"Open up your terminal and run this command. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash\n")),(0,o.kt)("p",null,"Close and re-open your terminal, and nvm will be installed. "),(0,o.kt)("p",null,"We will be using version 16.13.2 of node so run these commands. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nvm install node\nnvm install v16.13.2\n")),(0,o.kt)("p",null,"You can check node is installed with this command. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"node --version\n")),(0,o.kt)("p",null,"Before we start using Node.js, what is it?\nNode.js is a JavaScript runtime environment that lets us execute JavaScript code outside of a web browser.\nIt will also let us use server-side scripting, which makes web development a lot easier.\nWe will dive a little deeper into this in the upcoming units.\nThere's a lot more to talk about, and we can't fit it all into this one unit.\nIf you want to learn more, you can find many resources online. "),(0,o.kt)("h3",{id:"running-javascript"},"Running JavaScript"),(0,o.kt)("p",null,"Once node is installed, we can run our own JavaScript code on our computer.\nCreate a new file with the ",(0,o.kt)("inlineCode",{parentName:"p"},".js")," file extension.\nAdd this to the file: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'// hello.js\nconsole.log("Hello, World!")\n')),(0,o.kt)("p",null,"Go back to your terminal, and we can run these files with a simple command. ",(0,o.kt)("inlineCode",{parentName:"p"},"node <name_of_file>")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"node hello.js\n> Hello, World!\n")),(0,o.kt)("h2",{id:"assignment"},"Assignment"),(0,o.kt)("p",null,"This unit's assignment is to complete a series of programming problems use Javascript."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Required Tasks")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Fork the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/icssc/javascript-practice"},"javascript-practice")," GitHub Repository."),(0,o.kt)("li",{parentName:"ul"},"Solve each challenge in the /problems folder and push your code to GitHub.")),(0,o.kt)("h3",{id:"submission"},"Submission"),(0,o.kt)("p",null,"Complete the ",(0,o.kt)("a",{parentName:"p",href:"https://forms.gle/qQyrAuwojkVmWjEG8"},"Google Form")),(0,o.kt)("iframe",{src:"https://docs.google.com/forms/d/e/1FAIpQLSe1bJzI7j6V1at3LZLs7c-NzsrzbIHYpel4k3B58vc9tMviaQ/viewform?embedded=true",width:"100%",height:"1116",frameborder:"0",marginheight:"0",marginwidth:"0"},"Loading\u2026"),(0,o.kt)("h2",{id:"external-resources"},"External Resources"),(0,o.kt)("p",null,"JavaScript"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript"},"https://developer.mozilla.org/en-US/docs/Web/JavaScript")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.w3schools.com/js/default.asp"},"https://www.w3schools.com/js/default.asp"))),(0,o.kt)("p",null,"JavaScript Array Functions"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=DC471a9qrU4"},"FireShip .map in 100 seconds")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=tVCYa_bnITg"},"FireShip .reduce in 100 seconds"))))}h.isMDXComponent=!0}}]);